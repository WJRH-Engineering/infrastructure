from alpine:latest as repository
run apk add --no-cache git

# this command fetches the latest commit from the repository. Its purpose is to
# invalidate docker's cache every time a change is made to the repository, which
# will trigger a rebuild
# https://stackoverflow.com/a/64119968
add "https://api.github.com/repos/WJRH-Engineering/remote-studio/commits?per_page=1" latest_commit
run git clone https://github.com/WJRH-Engineering/remote-studio.git

# build image
from alpine:latest

# dependencies
run apk add --no-cache python3 py3-pip postgresql-client
run pip install toml redis

# build psycopg2 from source, and then remove its build dependencies
# this step saves almost 400MB of space (75MB vs 449MB)
# https://github.com/psycopg/psycopg2/issues/684#issuecomment-431929976
run apk add --no-cache --virtual .build-deps \
    gcc \
    python3-dev \
    musl-dev \
    postgresql-dev \
    && pip install --no-cache-dir psycopg2 \
    && apk del --no-cache .build-deps

# setup the wjrh user
run adduser -D wjrh
workdir /home/wjrh

# copy necessary files into image
copy --from=repository /remote-studio/init /home/wjrh
copy --from=repository /remote-studio/init/config.toml /etc/config.toml
copy ./secrets /secrets

# give the wjrh user access to the secrets folder
run chown -R wjrh /secrets
run ln -s /secrets/.pgpass /home/wjrh/.pgpass

# switch users and run the script
user wjrh
cmd python3 main.py
